---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app docmost
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      docmost:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: docmost-secret
        containers:
          app:
            image:
              repository: docker.io/docmost/docmost
              tag: 0.21.0@sha256:7b69c758d1b3286eaa5ba961fcc1b263bc5768124f29b097ce39fff5e48c073f
            env:
              TZ: ${TIMEZONE}
              APP_URL: "https://docmost.${SECRET_DOMAIN_INTERNAL}"
              STORAGE_DRIVER: s3
              AWS_S3_REGION: us-east-1
              AWS_S3_FORCE_PATH_STYLE: "true"
              AWS_S3_BUCKET: docmost
              AWS_S3_ENDPOINT: "https://s3.${SECRET_DOMAIN_INTERNAL}"
              PORT: &port 3000
              MAIL_DRIVER: smtp
              SMTP_HOST: smtp-relay.networking.svc.cluster.local
              SMTP_PORT: 2525
              SMTP_SECURE: false
              MAIL_FROM_ADDRESS: "docmost@${SECRET_DOMAIN}"
              MAIL_FROM_NAME: Docmost
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
              limits:
                memory: 750Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    ingress:
      app:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "docmost.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      tmpfs:
        type: emptyDir
        advancedMounts:
          docmost:
            app:
              - path: /tmp
                subPath: tmp