---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app altmount
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      altmount:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/javi11/altmount
              tag: 0.0@sha256:fe3dd9ca9c6cde37b1f3239a8c31876b0705040c5f801632767f75501254f6f8
            command: ["/app/altmount"]
            args: ["serve", "--config=/config/config.yaml"]
            env:
              TZ: ${TIMEZONE}
              PORT: &port 8080
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /live
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
          rclone:
            image:
              repository: ghcr.io/rclone/rclone
              tag: 1.71.2@sha256:3103526c506266a9ecdf064efe99bf3677d92ef6407af124d8c56b4f49cbaa51
            args: ["mount", "altmount:", "/mnt/altmount", "--config=/config/rclone.conf", "--allow-non-empty", "--allow-other"]
            env:
              TZ: ${TIMEZONE}
            securityContext:
              privileged: true
              readOnlyRootFilesystem: true
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    ingress:
      app:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-tinyauth@kubernetescrd"
        hosts:
          - host: &host "altmount.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          altmount:
            app:
              - path: /config
                subPath: config
              - path: /metadata
                subPath: metadata
      rclone:
        type: secret
        name: rclone-secret
        advancedMounts:
          altmount:
            rclone:
              - path: /config/rclone.conf
                subPath: rclone.conf
                readOnly: true
      media:
        type: emptyDir
        globalMounts:
          - path: /mnt/altmount
      tmpfs:
        type: emptyDir
        advancedMounts:
          altmount:
            app:
              - path: /log
                subPath: log
              - path: /tmp
                subPath: tmp
            rclone:
              - path: /tmp
                subPath: tmp-rclone
