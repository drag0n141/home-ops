---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app open-webui
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      open-webui:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: open-webui-secret
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: 0.6.23@sha256:d5fef0cf1f8acd824b6474e8288526dc02ebe91a66a146eaf1c1c1df657af149
            env:
              TZ: ${TIMEZONE}
              # App
              WEBUI_URL: https://chat.${SECRET_DOMAIN}
              CORS_ALLOW_ORIGIN: https://chat.${SECRET_DOMAIN}
              DEFAULT_LOCALE: de
              ENABLE_OPENAI_API: True
              ENABLE_OLLAMA_API: False
              ENABLE_WEB_SEARCH: True
              ENABLE_SEARCH_QUERY_GENERATION: True
              ENABLE_PERSISTENT_CONFIG: False
              WEBUI_SESSION_COOKIE_SAME_SITE: lax
              WEBUI_SESSION_COOKIE_SECURE: True
              # Searx
              WEB_SEARCH_ENGINE: searxng
              SEARXNG_QUERY_URL: http://searxng.default.svc.cluster.local:8080/search?q=<query>
              # Redis
              ENABLE_WEBSOCKET_SUPPORT: True
              WEBSOCKET_MANAGER: redis
              # OIDC
              ENABLE_OAUTH_SIGNUP: True
              OAUTH_MERGE_ACCOUNTS_BY_EMAIL: True
              OAUTH_UPDATE_PICTURE_ON_LOGIN: True
              OAUTH_PROVIDER_NAME: "Pocket ID"
              OAUTH_SCOPES: "openid profile email groups"
              OPENID_PROVIDER_URL: https://id.${SECRET_DOMAIN}/.well-known/openid-configuration
              OPENID_REDIRECT_URI: https://chat.${SECRET_DOMAIN}/oauth/oidc/callback
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 2000Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: 8080
    ingress:
      app:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "chat.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      data:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /app/backend/data
      tmpfs:
        type: emptyDir
        advancedMounts:
          open-webui:
            app:
              - path: /tmp
                subPath: tmp
