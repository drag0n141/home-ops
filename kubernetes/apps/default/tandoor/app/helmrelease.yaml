---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tandoor
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      tandoor:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: tandoor-secret
        containers:
          app:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 2.2.7@sha256:bbafaa18a39292e3e2cf032e090d17d0fcc1deb71a2b98425fec99cb05e8532d
            env:
              TZ: ${TIMEZONE}
              ALLOWED_HOSTS: "*"
              COMMENT_PREF_DEFAULT: 1
              DB_ENGINE: django.db.backends.postgresql_psycopg2
              DEBUG: 0
              DEFAULT_FROM_EMAIL: recipes@${SECRET_DOMAIN}
              EMAIL_HOST: smtp-relay.networking.svc.cluster.local
              EMAIL_PORT: 2525
              ENABLE_SIGNUP: 0
              FRACTION_PREF_DEFAULT: 0
              GUNICORN_MEDIA: 0
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5
              SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect
              TANDOOR_PORT: &port 8000
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 1024Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: 8000
    ingress:
      app:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "recipes.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/mediafiles
                subPath: mediafiles
              - path: /opt/recipes/staticfiles
                subPath: staticfiles
      tmpfs:
        type: emptyDir
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/cookbook/static/django_js_reverse
                subPath: django_js_reverse
              - path: /var/lib/nginx/logs
                subPath: nginx_logs
              - path: /var/lib/nginx/tmp
                subPath: nginx_tmp
              - path: /tmp
                subPath: tmp
