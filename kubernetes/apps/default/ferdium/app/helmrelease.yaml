---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ferdium
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      ferdium:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: ferdium-secret
        containers:
          app:
            image:
              repository: ghcr.io/ferdium/ferdium-server
              tag: 2.0.10@sha256:2af65f3a79302b60a0f5079d6796388fa3b4840d3344968b69000c76f99fe46f
            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
              NODE_ENV: production
              APP_UR: https://ferdium.${SECRET_DOMAIN}
              CONNECT_WITH_FRANZ: false
              DATA_DIR: "/data"
              DB_CONNECTION: pg
              DB_SSL: false
              IS_CREATION_ENABLED: false
              IS_REGISTRATION_ENABLED: false
              IS_DASHBOARD_ENABLED: true
              JWT_USE_PEM: true
              MAIL_CONNECTION: smtp
              MAIL_SENDER: ferdium@${SECRET_DOMAIN}
              MAIL_SSL: false
              SMTP_HOST: smtp-relay.networking.svc.cluster.local
              SMTP_PORT: 2525
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { add: ["CHOWN"], drop: ["ALL"] }
            resources:
              requests:
                cpu: 5m
                memory: 100Mi
              limits:
                memory: 500Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: 3333
    ingress:
      app:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "ferdium.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          ferdium:
            app:
              - path: /data
                subPath: data
              - path: /app/recipes
                subPath: recipes
