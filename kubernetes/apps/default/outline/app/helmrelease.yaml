---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app outline
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      outline:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: outline-secret
        containers:
          app:
            image:
              repository: docker.io/outlinewiki/outline
              tag: 0.87.0@sha256:3f31ddcd5ccc5b286b98290e9a5ae0c1c21a6c5a08c81d79869fb0b2e105dcce
            command: ["/bin/sh", "-c", "yarn db:migrate --env=production-ssl-disabled && yarn start --env=production-ssl-disabled"]
            env:
              TZ: ${TIMEZONE}
              URL: "https://outline.${SECRET_DOMAIN_INTERNAL}"
              ENABLE_UPDATES: false
              AWS_REGION: us-east-1
              AWS_S3_ACL: private
              AWS_S3_FORCE_PATH_STYLE: "true"
              AWS_S3_UPLOAD_BUCKET_NAME: outline
              AWS_S3_UPLOAD_BUCKET_URL: "https://s3.${SECRET_DOMAIN_INTERNAL}"
              FILE_STORAGE: s3
              FILE_STORAGE_UPLOAD_MAX_SIZE: "26214400"
              FILE_STORAGE_IMPORT_MAX_SIZE: "26214400"
              OIDC_DISPLAY_NAME: Pocket ID
              OIDC_SCOPES: "openid profile email"
              OIDC_AUTH_URI: "https://id.${SECRET_DOMAIN}/authorize"
              OIDC_TOKEN_URI: "https://id.${SECRET_DOMAIN}/api/oidc/token"
              OIDC_USERINFO_URI: "https://id.${SECRET_DOMAIN}/api/oidc/userinfo"
              OIDC_USERNAME_CLAIM: email
              PORT: &port 8080
              SMTP_HOST: smtp-relay.networking.svc.cluster.local
              SMTP_PORT: 2525
              SMTP_FROM_EMAIL: "outline@${SECRET_DOMAIN}"
              SMTP_SECURE: false
              WEB_CONCURRENCY: 10
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
              limits:
                memory: 1000Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    ingress:
      app:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "outline.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      tmpfs:
        type: emptyDir
        advancedMounts:
          outline:
            app:
              - path: /home/node
                subPath: node
              - path: /tmp
                subPath: tmp