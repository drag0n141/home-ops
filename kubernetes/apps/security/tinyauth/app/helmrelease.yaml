---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tinyauth
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      tinyauth:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/steveiliop56/tinyauth
              tag: v4.0.0@sha256:9e8fb9d58dc69031af395fd570ada147c6c7b98b29c036971bf69738b73d71b0
            env:
              TZ: ${TIMEZONE}
              APP_URL: https://tinyauth.${SECRET_DOMAIN}
              DISABLE_ANALYTICS: true
              DISABLE_CONTINUE: true
              PROVIDERS_POCKETID_NAME: Pocket-ID
              PROVIDERS_POCKETID_AUTH_URL: https://id.${SECRET_DOMAIN}/authorize
              PROVIDERS_POCKETID_TOKEN_URL: https://id.${SECRET_DOMAIN}/api/oidc/token
              PROVIDERS_POCKETID_USER_INFO_URL: https://id.${SECRET_DOMAIN}/api/oidc/userinfo
              PROVIDERS_POCKETID_SCOPES: openid email profile groups
              SECURE_COOKIE: true
              SESSION_EXPIRY: 604800
            envFrom:
              - secretRef:
                  name: tinyauth-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz
                    port: &port 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    service:
      app:
        ports:
          http:
            port: *port
    ingress:
      app:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "tinyauth.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      tmpfs:
        type: emptyDir
        advancedMounts:
          pocket-id:
            app:
              - path: /data
                subPath: data
