---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gamevault
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      gamevault:
        labels:
          nfsMount: "true"
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: gamevault-secret
        containers:
          app:
            image:
              repository: ghcr.io/phalcode/gamevault-backend
              tag: 16.0.0@sha256:f22439daa24d992a64e76ce67d8530a20707061d49e7db8044aff6e2120ad79c
            env:
              TZ: ${TIMEZONE}
              SERVER_REGISTRATION_DISABLED: false
              GAMES_INDEX_INTERVAL_IN_MINUTES: 240
              DB_SYSTEM: POSTGRESQL
              SERVER_PORT: &port 8080
              AUTH_BASIC_AUTH_ENABLED: false
              AUTH_OAUTH2_ENABLED: true
              AUTH_OAUTH2_AUTH_URL: https://id.${SECRET_DOMAIN}/authorize
              AUTH_OAUTH2_TOKEN_URL: https://id.${SECRET_DOMAIN}/api/oidc/token
              AUTH_OAUTH2_USERINFO_URL: https://id.${SECRET_DOMAIN}/api/oidc/userinfo
              AUTH_OAUTH2_CALLBACK_URL: https://gamevault.${SECRET_DOMAIN_INTERNAL}/api/auth/oauth2/login
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 3500Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    ingress:
      app:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "gamevault.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          gamevault:
            app:
              - path: /config
                subPath: config
              - path: /media
                subPath: media
      games:
        type: nfs
        server: nas01.${SECRET_DOMAIN_INT}
        path: /mnt/data/spiele
        globalMounts:
          - path: /files
      tmpfs:
        type: emptyDir
        advancedMounts:
          gamevault:
            app:
              - path: /logs
                subPath: logs
              - path: /tmp
                subPath: tmp
