---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app netbootxyz
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      netbootxyz:
        labels:
          nfsMount: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/netbootxyz/netbootxyz
              tag: 0.7.6-nbxyz2@sha256:c0f6be6d49a5d5df6620332bd582e56c95a091a3f60a25133b19f6d686e1fa39
            env:
              TZ: ${TIMEZONE}
              NGINX_PORT: &bootport 8080
              WEB_APP_PORT: &port 3000
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1000Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
          boot:
            port: *bootport
    ingress:
      app:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-tinyauth@kubernetescrd"
        hosts:
          - host: &host "netbootxyz.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      boot:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "boot.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: boot
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /config
      assets:
        type: nfs
        server: nas01.${SECRET_DOMAIN_INT}
        path: /mnt/data/iso/netboot
        globalMounts:
          - path: /assets
