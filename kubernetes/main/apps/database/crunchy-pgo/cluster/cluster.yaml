---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres
spec:
  postgresVersion: 16
  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "postgres"
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replica 3
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres
  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"
        parameters:
          max_connections: 500
        pg_hba:
          - hostnossl all all 10.42.0.0/16 md5
          - hostssl all all all md5
  users:
    # Superuser
    - name: postgres
      databases: ["postgres"]
      options: SUPERUSER
      password: &password
        type: AlphaNumeric
    # Applications
    - name: atuin
      databases: ["atuin_db"]
      password: *password
    - name: authelia
      databases: ["authelia_db"]
      password: *password
    - name: authentik
      databases: ["authentik_db"]
      password: *password
    - name: gatus
      databases: ["gatus_db"]
      password: *password
    - name: gotify
      databases: ["gotify_db"]
      password: *password
    - name: lidarr
      databases: ["lidarr_main", "lidarr_log"]
      password: *password
    - name: paperless
      databases: ["paperless_db"]
      password: *password
    - name: prowlarr
      databases: ["prowlarr_main"]
      password: *password
    - name: radarr
      databases: ["radarr_main"]
      password: *password
    - name: radarr4k
      databases: ["radarr4k_main"]
      password: *password
    - name: readarr
      databases: ["readarr_cache", "readarr_main", "readarr_log"]
      password: *password
    - name: sonarr
      databases: ["sonarr_main"]
      password: *password
    - name: sonarr4k
      databases: ["sonarr4k_main"]
      password: *password
    - name: sonarrkids
      databases: ["sonarrkids_main"]
      password: *password
  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-pgo-secret
      global: &backupFlag
        archive-timeout: "60"
        archive-push-queue-max: 4GiB
        compress-type: lz4
        compress-level: "9"
        delta: "y"
        repo1-bundle: "y"
        repo1-block: "y"
        repo1-retention-full-type: time
        repo1-retention-full: "14"
        repo1-retention-diff: "30"
        repo1-path: "/crunchy-pgo"
        repo1-s3-uri-style: path
        # repo2-bundle: "y"
        # repo2-block: "y"
        # repo2-path: "/crunchy-pgo"
        # repo2-s3-uri-style: "path"
        # repo2-retention-full-type: "time"
        # repo2-retention-full: "2"
        # repo2-retention-diff: "7"
        # repo2-cipher-type: "aes-256-cbc"
      manual:
        repoName: repo1
        options: ["--type=full"]
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - # Minio
          name: repo1
          s3: &minio
            bucket: crunchy-pgo
            endpoint: minio.${SECRET_DOMAIN_INT}
            region: us-east-1
          schedules:
            full: "0 1 * * 0"           # Sunday at 1am
            differential: "0 1 * * 1-6" # Mon-Sat at 1am
            incremental: "0 2-23 * * *" # Every hour except 1am
#  dataSource:
#    pgbackrest:
#      stanza: db
#      configuration: *backupConfig
#      global: *backupFlag
#      repo:
#        name: repo1
#        s3: *minio
  service:
    type: LoadBalancer
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: cpgo.${SECRET_DOMAIN_INTERNAL}
        io.cilium/lb-ipam-ips: "${CPGO_LB_ADDR}"
  proxy:
    pgBouncer:
      port: 5432
      replicas: *replica
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-pgbouncer
      config:
        global:
          pool_mode: transaction
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer
