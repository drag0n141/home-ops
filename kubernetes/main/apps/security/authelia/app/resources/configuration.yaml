---
authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 1m
  ldap:
    address: ldaps://ldap-lb.security.svc.cluster.local
    implementation: activedirectory
    timeout: 5s
    start_tls: false
    tls:
      skip_verify: true
    base_dn: "{{ .AD_BASE_DN }}"
    additional_users_dn: ou=Benutzer,ou=Home
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=Gruppen,ou=Home
    groups_filter: (&(member:1.2.840.113556.1.4.1941:={dn})(objectClass=group)(objectCategory=group))
    group_search_mode: filter
    user: "{{ .AD_LDAP_USER_DN }}"
    password: "{{ .AD_LDAP_USER_PASSWORD }}"
    attributes:
      username: sAMAccountName
      display_name: displayName
      mail: mail
      member_of: memberOf
      group_name: cn

session:
  secret: "{{ .AUTHELIA_SESSION_SECRET }}"
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: authelia-home-ops
      domain: {{ .DOMAIN }}
      authelia_url: https://authelia.{{ .DOMAIN }}
  redis:
    database_index: 2
    password: "{{ .DRAGONFLY_PASSWORD }}"
    host: dragonfly.database.svc.cluster.local

storage:
  encryption_key: "{{ .AUTHELIA_STORAGE_ENCRYPTION_KEY }}"

notifier:
  disable_startup_check: true
  smtp:
    address: smtp-relay.networking.svc.cluster.local:2525
    sender: Authelia <authelia@{{ .DOMAIN }}>
    disable_require_tls: true

totp:
  disable: false
  issuer: authelia.com

webauthn:
  disable: true

duo_api:
  disable: true

access_control:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain: ["authelia.{{ .DOMAIN }}"]
      policy: bypass
    # Bypass Rule for api / trigges
    - domain: ["*.{{ .DOMAIN }}"]
      policy: bypass
      resources:
        - "^/api/.*$"
        - "^/ping*$"
    # One Factor Login
    - domain: ["nextcloud.{{ .DOMAIN }}"]
      policy: one_factor
      subject: ["group:Nextcloud"]
    # Bitwarden Admin Login
    - domain: ["bitwarden.{{ .DOMAIN }}"]
      policy: two_factor
      resources: ["^/admin.*$"]
      subject: ["group:Authelia"]
    # Standard One Factor Login
    - domain: ["*.{{ .DOMAIN }}", "*.{{ .DOMAIN_INTERNAL }}", "*.{{ .DOMAIN_INT }}"]
      policy: one_factor
      subject: ["group:Authelia"]

identity_validation:
  reset_password:
    jwt_secret: "{{ .AUTHELIA_JWT_SECRET }}"

identity_providers:
  oidc:
    hmac_secret: "{{ .AUTHELIA_OIDC_HMAC_SECRET }}"
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
      allowed_origins_from_client_redirect_uris: true
    jwks:
      - key: |-
          {{- .AUTHELIA_OIDC_ISSUER_KEY | nindent 10 }}
        algorithm: 'RS256'
    claims_policies:
      legacy_claims:
        id_token: ['groups', 'email', 'email_verified', 'preferred_username', 'name']
    clients:
      - client_id: grafana
        client_name: Grafana
        client_secret: "{{ .GRAFANA_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://grafana.{{ .DOMAIN_INTERNAL }}/login/generic_oauth"]
        userinfo_signed_response_alg: none
      - client_id: immich
        client_name: Immich
        client_secret: "{{ .IMMICH_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "email"]
        redirect_uris: ["https://photos.{{ .DOMAIN }}/auth/login", "app.immich:///oauth-callback"]
        userinfo_signed_response_alg: none
      - client_id: miniflux
        client_name: Miniflux
        client_secret: "{{ .MINIFLUX_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://miniflux.{{ .DOMAIN }}/oauth2/oidc/callback"]
        userinfo_signed_response_alg: none
      - client_id: nextcloud
        client_name: Nextcloud
        client_secret: "{{ .NEXTCLOUD_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://nextcloud.{{ .DOMAIN }}/apps/oidc_login/oidc"]
        userinfo_signed_response_alg: none
        claims_policy: legacy_claims
      - client_id: nodered
        client_name: Node-RED
        client_secret: "{{ .NODE_RED_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://nodered.{{ .DOMAIN_INTERNAL }}/auth/strategy/callback"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
      - client_id: outline
        client_name: Outline
        client_secret: "{{ .OUTLINE_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "email"]
        redirect_uris: ["https://outline.{{ .DOMAIN_INTERNAL }}/auth/oidc.callback"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
      - client_id: paperless
        client_name: Paperless
        client_secret: "{{ .PAPERLESS_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://paperless.{{ .DOMAIN_INTERNAL }}/accounts/oidc/authelia/login/callback/"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      - client_id: romm
        client_name: Romm
        client_secret: "{{ .ROMM_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "email"]
        redirect_uris: ["https://romm.{{ .DOMAIN_INTERNAL }}/api/oauth/openid"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
        claims_policy: legacy_claims
      - client_id: tandoor
        client_name: Tandoor
        client_secret: "{{ .TANDOOR_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "email"]
        redirect_uris: ["https://recipes.{{ .DOMAIN }}/accounts/oidc/authelia/login/callback/"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      - client_id: vikunja
        client_name: Vikunja
        client_secret: "{{ .VIKUNJA_OAUTH_CLIENT_SECRET }}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://vikunja.{{ .DOMAIN }}/auth/openid/authelia"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
