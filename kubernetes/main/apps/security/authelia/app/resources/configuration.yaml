---
authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 1m
  ldap:
    address: ldaps://dc01.${SECRET_DOMAIN_AD}
    implementation: activedirectory
    timeout: 5s
    start_tls: false
    tls:
      skip_verify: true
    base_dn: "{{ .AD_BASE_DN }}"
    additional_users_dn: ou=Benutzer,ou=Home
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=Gruppen,ou=Home
    groups_filter: (&(member:1.2.840.113556.1.4.1941:={dn})(objectClass=group)(objectCategory=group))
    group_search_mode: filter
    user: "{{ .AD_AUTHELIA_USER_DN }}"
    password: "{{ .AD_AUTHELIA_USER_PASSWORD }}"
    attributes:
      username: sAMAccountName
      display_name: displayName
      mail: mail
      member_of: memberOf
      group_name: cn

session:
  secret: "{{ .AUTHELIA_SESSION_SECRET }}"
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: authelia-home-ops
      domain: ${SECRET_DOMAIN}
      authelia_url: https://authelia.${SECRET_DOMAIN}
  redis:
    database_index: 2
    password: ${SECRET_REDIS_PASSWORD}
    host: dragonfly.database.svc.cluster.local

storage:
  encryption_key: "{{ .AUTHELIA_STORAGE_ENCRYPTION_KEY }}"

notifier:
  disable_startup_check: true
  smtp:
    address: smtp-relay.networking.svc.cluster.local:2525
    sender: Authelia <authelia@${SECRET_DOMAIN}>
    disable_require_tls: true

totp:
  disable: false
  issuer: authelia.com

webauthn:
  disable: true

duo_api:
  disable: true

access_control:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain: ["authelia.${SECRET_DOMAIN}"]
      policy: bypass
    # Bypass Rule for api / trigges
    - domain: ["*.${SECRET_DOMAIN}"]
      policy: bypass
      resources:
        - "^/api/.*$"
        - "^/identity/.*$"
        - "^/triggers/.*$"
        - "^/rss/*$"
        - "^/xmltv/*$"
        - "^/liverel.*$"
        - "^/meshagents.*$"
        - "^/meshsettings.*$"
        - "^/agent.*$"
        - "^/control.*$"
        - "^/meshrelay.*$"
        - "^/wl/.*$"
    # One Factor Login
    - domain: ["nextcloud.${SECRET_DOMAIN}", "cloud.${SECRET_DOMAIN}"]
      policy: one_factor
      subject: ["group:Nextcloud"]
    # Two Factor Login
    - domain: ["portainer.${SECRET_DOMAIN_INTERNAL}", "2fauth.${SECRET_DOMAIN_INTERNAL}", "guacamole.${SECRET_DOMAIN}"]
      policy: two_factor
      subject: ["group:Authelia"]
    # Bitwarden Admin Login
    - domain: ["bitwarden.${SECRET_DOMAIN}"]
      policy: two_factor
      resources: ["^/admin.*$"]
      subject: ["group:Authelia"]
    # Standard One Factor Login
    - domain: ["*.${SECRET_DOMAIN}"]
      policy: one_factor
      subject: ["group:Authelia"]

identity_validation:
  reset_password:
    jwt_secret: "{{ .AUTHELIA_JWT_SECRET }}"

identity_providers:
  oidc:
    hmac_secret: "{{ .AUTHELIA_OIDC_HMAC_SECRET }}"
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
      allowed_origins_from_client_redirect_uris: true
    jwks:
      - key: |-
          {{- .AUTHELIA_OIDC_ISSUER_KEY | nindent 10 }}
        algorithm: 'RS256'
    clients:
      - client_id: grafana
        client_name: Grafana
        client_secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://grafana.${SECRET_DOMAIN_INTERNAL}/login/generic_oauth"]
        userinfo_signed_response_alg: none
      - client_id: portainer
        client_name: Portainer
        client_secret: "${PORTAINER_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://portainer.${SECRET_DOMAIN_INTERNAL}/"]
        userinfo_signed_response_alg: none
      - client_id: nextcloud
        client_name: Nextcloud
        client_secret: "${NEXTCLOUD_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://nextcloud.${SECRET_DOMAIN}/apps/oidc_login/oidc"]
        userinfo_signed_response_alg: none
      - client_id: nodered
        client_name: Node-RED
        client_secret: "${NODE_RED_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://nodered.${SECRET_DOMAIN_INTERNAL}/auth/strategy/callback"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
      - client_id: outline
        client_name: Outline
        client_secret: "${OUTLINE_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes:  ["openid", "profile", "email"]
        redirect_uris: ["https://outline.${SECRET_DOMAIN_INTERNAL}/auth/oidc.callback"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
