---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app blocky
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: database
  values:
    controllers:
      blocky:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/drag0n141/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: blocky-secret
        containers:
          app:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.23@sha256:450d193393c0dceb108d1cd80a5580ab9d851127c924c1ae89361d32161ae528
            env:
              TZ: ${TIMEZONE}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - /app/blocky
                      - healthcheck
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                add:
                  - NET_BIND_SERVICE
                drop:
                  - ALL
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      app:
        controller: blocky
        ports:
          http:
            port: 4000
      dns:
        controller: blocky
        type: LoadBalancer
        annotations:
          coredns.io/hostname: "blocky.${SECRET_DOMAIN_INTERNAL}"
          io.cilium/lb-ipam-ips: "${BLOCKY_LB_ADDR}"
        externalTrafficPolicy: Cluster
        ports:
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            port: 53
            protocol: UDP
    serviceMonitor:
      main:
        serviceName: blocky
        endpoints:
          - interval: 30s
            path: /metrics
            port: http
            scrapeTimeout: 10s
    persistence:
      config:
        enabled: true
        type: configMap
        name: blocky-configmap
        globalMounts:
          - path: /app/config.yml
            subPath: config.yml
            readOnly: true
