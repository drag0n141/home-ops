---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app defguard
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      defguard:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/defguard/defguard
              tag: 1.1.3@sha256:538a2fdb2368fbb7fb5f81dd06da74425b657fd7fd84346449750129ba58507a
            env:
              TZ: ${TIMEZONE}
              DEFGUARD_ENROLLMENT_URL: https://enrollment.${SECRET_DOMAIN}
              DEFGUARD_PROXY_URL: https://enrollment-grpc.${SECRET_DOMAIN}
              DEFGUARD_URL: https://defguard.${SECRET_DOMAIN}
              DEFGUARD_WEBAUTHN_RP_ID: defguard.${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: defguard-secret
              - secretRef:
                  name: defguard-db-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/health
                    port: 8000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
      proxy:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          proxy:
            image:
              repository: ghcr.io/defguard/defguard-proxy
              tag: 1.1.1@sha256:66e68d8f36b905e6498fd0f57c5968d817234a695c2a3c36440500a6b52170da
            env:
              TZ: ${TIMEZONE}
            probes:
              liveness: &probes-proxy
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/health
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes-proxy
      gateway:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          proxy:
            image:
              repository: ghcr.io/defguard/gateway
              tag: 1.1.0@sha256:63ed4a56947c080aa4279461643964765589d3c8d07506664a6c925a8acc031d
            env:
              TZ: ${TIMEZONE}
              DEFGUARD_GATEWAY_NAME: Gateway-K8s
              DEFGUARD_GRPC_URL: https://defguard-grpc.${SECRET_DOMAIN}
              DEFGUARD_USERSPACE: true
            envFrom:
              - secretRef:
                  name: defguard-gateway-secret
    service:
      app:
        controller: defguard
        primary: true
        ports:
          http:
            port: 8000
      grpc:
        controller: defguard
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: h2c
        ports:
          grpc:
            port: 50055
      proxy:
        controller: proxy
        ports:
          http:
            port: 8080
      proxy-grpc:
        controller: proxy
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: h2c
        ports:
          grpc:
            port: 50051
      gateway:
        controller: gateway
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "defguard.${SECRET_DOMAIN_INTERNAL}"
          lbipam.cilium.io/ips: "${DEFGUARD_LB_ADDR}"
        externalTrafficPolicy: Cluster
        ports:
          wireguard:
            port: 50051
            protocol: UDP
    ingress:
      app:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/exclude-unifi: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "defguard.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      grpc:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/exclude-unifi: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &grpc "defguard-grpc.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: grpc
                  port: grpc
        tls:
          - hosts:
              - *grpc
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      proxy:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/exclude-unifi: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &proxy "enrollment.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: proxy
                  port: http
        tls:
          - hosts:
              - *proxy
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      proxy-grpc:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/exclude-unifi: "true"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &proxy-grpc "enrollment-grpc.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: proxy-grpc
                  port: grpc
        tls:
          - hosts:
              - *proxy-grpc
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
