---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: loki
      version: 6.24.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    deploymentMode: SimpleScalable
    loki:
      auth_enabled: false
      analytics:
        reporting_enabled: false
      server:
        log_level: info
        grpc_server_max_recv_msg_size: 8388608
        grpc_server_max_send_msg_size: 8388608
      storage:
        type: s3
        s3:
          s3ForcePathStyle: true
          insecure: true
      compactor:
        working_directory: /var/loki/compactor/retention
        delete_request_store: s3
        retention_enabled: true
      frontend:
        max_outstanding_per_tenant: 4096
      ingester:
        chunk_encoding: snappy
      query_scheduler:
        max_outstanding_requests_per_tenant: 4096
      limits_config:
        ingestion_burst_size_mb: 128
        ingestion_rate_mb: 64
        max_query_parallelism: 100
        per_stream_rate_limit: 64M
        per_stream_rate_limit_burst: 128M
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        retention_period: 14d
        shard_streams:
          enabled: true
        split_queries_by_interval: 1h
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      rulerConfig:
        enable_api: true
        enable_alertmanager_v2: true
        alertmanager_url: http://alertmanager.monitoring.svc.cluster.local:9093
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /rules/fake
    gateway:
      replicas: 3
      enabled: true
      image:
        registry: ghcr.io
        repository: nginxinc/nginx-unprivileged
        tag: 1.27-alpine@sha256:73c290de1b627ecc4dbc4e58ccdc78d6c0d3f6c06baf4e3e09615bcabd643e0a
      deploymentStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 50%
          maxSurge: 50%
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/component: gateway
      ingress:
        enabled: true
        ingressClassName: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: &host "loki.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    write:
      replicas: 3
      persistence:
        size: 20Gi
        storageClass: openebs-hostpath
    read:
      replicas: 3
    backend:
      replicas: 3
      persistence:
        size: 20Gi
        storageClass: openebs-hostpath
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      rules:
        enabled: false
      serviceMonitor:
        enabled: false
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
    sidecar:
      image:
        repository: ghcr.io/kiwigrid/k8s-sidecar
      rules:
        searchNamespace: ALL
        folder: /rules/fake
    lokiCanary:
      enabled: false
    test:
      enabled: false
  valuesFrom:
    - targetPath: loki.storage.bucketNames.chunks
      kind: ConfigMap
      name: loki-bucket
      valuesKey: BUCKET_NAME
    - targetPath: loki.storage.bucketNames.ruler
      kind: ConfigMap
      name: loki-bucket
      valuesKey: BUCKET_NAME
    - targetPath: loki.storage.s3.endpoint
      kind: ConfigMap
      name: loki-bucket
      valuesKey: BUCKET_HOST
    - targetPath: loki.storage.s3.accessKeyId
      kind: Secret
      name: loki-bucket
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: loki.storage.s3.secretAccessKey
      kind: Secret
      name: loki-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
