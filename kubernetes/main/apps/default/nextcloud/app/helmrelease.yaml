---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.6.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: storage
  values:
    image:
      repository: public.ecr.aws/docker/library/nextcloud
      tag: 28.0.2-fpm-alpine
    nginx:
      enabled: true
      securityContext:
        runAsGroup: ${APP_GID}
      resources:
        requests:
          cpu: 50m
          memory: 20Mi
        limits:
          memory: 100Mi
    nextcloud:
      host: &host nextcloud.${SECRET_DOMAIN}
      securityContext:
        runAsUser: ${APP_UID}
        runAsGroup: ${APP_GID}
        runAsNonRoot: true
        readOnlyRootFilesystem: false
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16
          envFrom:
            - secretRef: &envFrom
                name: nextcloud-secret
            - secretRef:
                name: nextcloud-redis-secret
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST
          value: nextcloud-redis.default.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-redis-secret
              key: REDIS_PASSWORD
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: ${SECRET_DOMAIN}
        smtp:
          host: smtp-relay.networking.svc.cluster.local
          port: 2525
          authtype: NONE
          name: ""
          password: ""
    cronjob:
      enabled: true
      securityContext:
        runAsGroup: ${APP_GID}
    metrics:
      enabled: false
      https: true
      serviceMonitor:
        enabled: false
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-rw.database.svc.cluster.local
      database: nextcloud_db
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS
    startupProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 360
      successThreshold: 1
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    securityContext:
      fsGroupChangePolicy: OnRootMismatch
    ingress:
      enabled: true
      className: traefik-external
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
          secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs
        accessMode: ReadWriteMany
