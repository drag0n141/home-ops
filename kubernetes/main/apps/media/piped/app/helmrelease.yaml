---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app piped
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      backend:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/1337kavin/piped
              tag: latest@sha256:4640c0a7c2ec920a7e1c42db94cab41c1da08ae04e307620c5d9a619b0e3bffc
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              seccompProfile: { type: RuntimeDefault }
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                memory: 2000Mi
      frontend:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/bjw-s-labs/piped-frontend
              tag: 2025.2.17@sha256:38ab976e8316afdaf5073ec697831642449834f2e4f298040150a42d7db6c31f
            env:
              BACKEND_HOSTNAME: piped-api.${SECRET_DOMAIN}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                memory: 256Mi
      ytproxy:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/1337kavin/piped-proxy
              tag: latest@sha256:a6f130283e87d192e199df783b65125b9337a7cd04f483b91b7d1234de7f49f0
            command:
              - /app/piped-proxy
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              seccompProfile: { type: RuntimeDefault }
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                memory: 2000Mi
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
    service:
      backend:
        controller: backend
        ports:
          http:
            port: 8080
      frontend:
        controller: frontend
        ports:
          http:
            port: 8080
      ytproxy:
        controller: ytproxy
        ports:
          http:
            port: 8080
    ingress:
      backend:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-piped@kubernetescrd"
        hosts:
          - host: &host-api "piped-api.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: backend
                  port: http
        tls:
          - hosts:
              - *host-api
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      frontend:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-piped-frontend@kubernetescrd"
        hosts:
          - host: &host "piped.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: frontend
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      ytproxy:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-piped@kubernetescrd"
        hosts:
          - host: &host-proxy "piped-proxy.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: ytproxy
                  port: http
        tls:
          - hosts:
              - *host-proxy
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        type: secret
        name: piped-secret
        advancedMounts:
          backend:
            app:
              - path: /app/config.properties
                subPath: config.properties
                readOnly: true
