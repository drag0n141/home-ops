---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app piped
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      backend:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/1337kavin/piped
              tag: latest@sha256:d0530a4d12e3bcc7a898a02b223bfec1c44df94b9408096ebe7c1d2d40a1aa5d
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              seccompProfile: { type: RuntimeDefault }
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                memory: 2000Mi
      frontend:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/bjw-s-labs/piped-frontend
              tag: 2025.1.12@sha256:df4083713c8dc5a6ea5397cb23d380e6e3aec1262986ca17662998e0901561e8
            env:
              BACKEND_HOSTNAME: piped-api.${SECRET_DOMAIN}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                memory: 256Mi
      ytproxy:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/1337kavin/piped-proxy
              tag: latest@sha256:8692f37be0069ecef8d712aa0b2774e0cbf8bd64dfd5e4a626f6306bd4b10f06
            command:
              - /app/piped-proxy
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              seccompProfile: { type: RuntimeDefault }
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                memory: 2000Mi
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
    service:
      backend:
        controller: backend
        ports:
          http:
            port: 8080
      frontend:
        controller: frontend
        ports:
          http:
            port: 8080
      ytproxy:
        controller: ytproxy
        ports:
          http:
            port: 8080
    ingress:
      backend:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-piped@kubernetescrd"
        hosts:
          - host: &host-api "piped-api.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: backend
                  port: http
        tls:
          - hosts:
              - *host-api
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      frontend:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-piped-frontend@kubernetescrd"
        hosts:
          - host: &host "piped.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: frontend
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
      ytproxy:
        className: traefik-external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-piped@kubernetescrd"
        hosts:
          - host: &host-proxy "piped-proxy.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: ytproxy
                  port: http
        tls:
          - hosts:
              - *host-proxy
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        type: secret
        name: piped-secret
        advancedMounts:
          backend:
            app:
              - path: /app/config.properties
                subPath: config.properties
                readOnly: true
