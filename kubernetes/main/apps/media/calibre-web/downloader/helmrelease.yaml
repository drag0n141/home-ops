---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre-downloader
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      calibre-downloader:
        labels:
          nfsMount: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/calibrain/calibre-web-automated-book-downloader
              tag: latest@sha256:e4c205932b0ece06d76de09ba8569d5aa30768cc46d04beb3a24ddc0106043d6
            command: ["python", "-m", "app"]
            env:
              TZ: ${TIMEZONE}
              FLASK_PORT: 8084
              INGEST_DIR: /mnt/data/media/nzb/books
              BOOK_LANGUAGE: de
              USE_CF_BYPASS: true
              CLOUDFLARE_PROXY_URL: http://localhost:8000
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /request/api/status
                    port: 8084
                  initialDelaySeconds: 5
                  periodSeconds: 30
                  timeoutSeconds: 30
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 2Gi
          bypass:
            image:
              repository: ghcr.io/sarperavci/cloudflarebypassforscraping
              tag: latest@sha256:8e99847ae05bce24fe8a400bb9b30990a4cec32853f3975905eab95e05febefa
            env:
              TZ: ${TIMEZONE}
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8084
    ingress:
      app:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-authelia@kubernetescrd"
        hosts:
          - host: &host "calibre-downloader.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      log:
        type: emptyDir
        globalMounts:
          - path: /var/log/cwa-book-downloader/
      media:
        type: nfs
        server: nas01.${SECRET_DOMAIN_INT}
        path: /mnt/data/media
        globalMounts:
          - path: /mnt/data/media
