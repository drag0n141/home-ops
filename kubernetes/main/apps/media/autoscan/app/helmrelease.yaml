---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app autoscan
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: storage
  values:
    controllers:
      autoscan:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/drag0n141/autoscan
              tag: 1.4.0@sha256:d7454313e449c65994a974c944ad42ea3a597d79776196e4e4573d32688bedc1
            env:
              TZ: ${TIMEZONE}
              AUTOSCAN_CONFIG: /config/config.yml
              AUTOSCAN_DATABASE: /config/autoscan.db
              AUTOSCAN_LOG: /config/activity.log
              AUTOSCAN_VERBOSITY: 0
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
    service:
      app:
        controller: autoscan
        ports:
          http:
            port: 3030
    ingress:
      app:
        className: traefik-internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN_INTERNAL}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-authelia@kubernetescrd"
        hosts:
          - host: &host "autoscan.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        existingClaim: autoscan
        globalMounts:
          - path: /config
      config-file:
        type: secret
        name: autoscan-secret
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
      media:
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: /mnt/user/media
        globalMounts:
          - path: /mnt/user/media
            readOnly: true
